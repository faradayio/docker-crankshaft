language: c

env:
  global:
    - PAGER=cat
    - secure: "jBQT4bDzIUP8g2j2haS1odNqI50TIJX+BprBvmH7oIG3tjtJydbzN1bpxtUGvcq0j+35PgTSQG9H8WYyXbfKiWUasS9nk7rO5j3a0w46LS+yEZTnTZOY0xVkvfW4QD/GEfR7FQCrWipYU9EFdnNzMGCYJ+77xpn+abz9qdRkQ7YaDJxzUUvVBR5hQOtXMxdt+dW6dnrYjz0P4F26eLyKFX2w6FIC41F66i3PX09NluxpTQmI8P3CUOA6y4aJNKAL2G8B+jMtQFQbQWPRXO2JCgtOEPtmymhnOHsMPgS/NhZzk4PsgMIrqV2P/7uaFU4YQ/++75GqcUKHoc3B7TvKJHgL/fkZ6mzaF4lrUvOlhMW0TPn2an4A+Gon062rHurki9J7xra9Bwg3M/+Tst6oFBImW/RyRUsV2R7xDCPUO+PPzMeNCcD8ZzJvsn5Cx0JBrXjzXWdvbua2N+4/94d4o16MSsFX7r89DnNYmb4yEyhKfMhQKOLzDFlN9dhgFd1Gnloc5dp3I+O0wpY2DDrdew1RdXS8lleYTsqkXDm+GOGMhtA/EMZdELTnu3OnjMdEyNh1mK1uWrb0xtkNGk7S9oH0Z0Ni/TJmWoVcvSNOTrsbFsLo26JD+8e2UdldrTULo1+x8s+J0kw5LBmsFhzJ+gRLZ9boJhl9+LJOvw7c1/o=" # DOCKER_EMAIL
    - secure: "Pp5gZnU2UBY5uMy4Fce00IaPG1aBdCAgCuBla89GI51z5E7ADg0cjtPC4m2hX4fNP8Dr+HRnH3pnOtjzA924eOGKdmJgGbneaMp7d2oxkIVt5lMXH41qCkrkDjt1iO4qOrmEWbPvD1mMM6hvaGpdXZdU6sW48E0j/8aAiWyL2pj/KlMO9LgDdTLrltObYanwXVTmJTgR/ygu28MeKHArEsjBMSlHURrge6zb3EKGz6v7jSriNJH74RmnBmc/YnppBnd3/AIfbuXfcbTy/RA1+MHw5SmKfQ9Jgs+DuXIXSYJjo5MhwSOozpoiKIrMdLupGK3a3pJxMXRC0NZQF5twrYR3Pg645Jv3KRUZPDK0NbY7P2qOXHJAow6aLNoLRl3GJb2EF80iVHxIiCd2JetB7m739nSbhu2xm+XggiXmlR4fyIspI8wQGOA180GJ4xtNUe0O/R1NcS8OF3SDLbKlkQuJYmbojFkOOqBngGDii+mZbon/zI66ikLJ6JmUmhq//HprBP9g1q1Fi+2/uYYSbjqbn8QR1s00YGjYJZd9T3RstvWB2NaqqbmhQT6hO3vBL2CXpGCl5P0Jqv2nU7QUA4hgtQfkdd1PQoveAqrp6AYrq+sMpik8+ZZdUVyruvfhY+VhBuPRQDCkhFXKskKMFAfLKYxVQwF5F7f5/qE+hoA=" # DOCKER_USER
    - secure: "B7grwtiNxXKHX7gZfIaKgrl+Km4EvxM75rCqdHKnxW/UBwfzArLLJ7PZsKujWHgV8QvVZAcFtvdpjvXcHOlzpHjZ+/vVaEKbBLEzZPfbnbLEWsr7EVElKxR5p0mvdv1j6WXrJCjvaswfm5c2YJIxX49z9ksXwPKsoCc6yucB0WY3uwg6Lw5QQjdgJpdBC1/Hp/F5S2kdKGMU05l3WRPNSHXDOm/erMHS//We3nl87Cm0ooO+NFwbMEDTzMNKpCfZw6jYNRIa+XSv9xJKDQKZzOdrXM2Z+kn6TX25eXbWDCkmXAU//2/bwpCzKQxGhZrqvVtgTDKOROrrCfHdeAlSe9qdfGNBTzq5uXTGi0RkoEJgWRrbUzP6G0b4/3Bd9fcKpifXwZerKMJmNpEHspxZMIiNJdyNyIOyVtnE9U90ePGsXTwvEOFwe2/7IUv++O/AYleyfNUUBh0I2UCdpMcY+2PNV6o5GPiif2SA3YJwLtlbDi17niVnjT16j2lwQv8oRjHA3VX0ngycUpwl23UO0s9B10f1Ff+U2GP7sp5nRcufG90Hu2cV7LLoOOBJ/X5zpi4m3Sba5RsomNEu+Q8QQWBoJA8nWpRQgPI5WOTDAcettGmZHd2LS4YJGnqBKRlONYpfuJxUiDzCVxzcy6gAC4LOlj0t2YM45GhiHHxU5+8=" # DOCKER_PASS
    - COMMIT=${TRAVIS_COMMIT::8}

before_install:
  - ./check-up-to-date-with-master.sh
  - sudo apt-get -y install python-pip

  - sudo apt-get -y install python-software-properties
  - sudo add-apt-repository -y ppa:cartodb/sci
  - sudo add-apt-repository -y ppa:cartodb/postgresql-9.5
  - sudo add-apt-repository -y ppa:cartodb/gis
  - sudo add-apt-repository -y ppa:cartodb/gis-testing
  - sudo apt-get update

  - sudo apt-get -y install python-joblib=0.8.3-1-cdb1
  - sudo apt-get -y install python-numpy=1:1.6.1-6ubuntu1

  # Install pysal
  - sudo pip install -I pysal==1.11.2

  - sudo apt-get -y install python-scipy=0.14.0-2-cdb6
  - sudo apt-get -y --no-install-recommends install python-sklearn-lib=0.14.1-3-cdb2
  - sudo apt-get -y --no-install-recommends install python-sklearn=0.14.1-3-cdb2
  - sudo apt-get -y --no-install-recommends install python-scikits-learn=0.14.1-3-cdb2

  # Force instalation of libgeos-3.5.0 (presumably needed because of existing version of postgis)
  - sudo apt-get -y install libgeos-3.5.0=3.5.0-1cdb2

  # Install postgres db and build deps
  - sudo /etc/init.d/postgresql stop # stop travis default instance
  - sudo apt-get -y remove --purge postgresql-9.1
  - sudo apt-get -y remove --purge postgresql-9.2
  - sudo apt-get -y remove --purge postgresql-9.3
  - sudo apt-get -y remove --purge postgresql-9.4
  - sudo apt-get -y remove --purge postgresql-9.5
  - sudo rm -rf /var/lib/postgresql/
  - sudo rm -rf /var/log/postgresql/
  - sudo rm -rf /etc/postgresql/
  - sudo apt-get -y remove --purge postgis-2.2
  - sudo apt-get -y autoremove

  - sudo apt-get -y install postgresql-9.5=9.5.2-3cdb2
  - sudo apt-get -y install postgresql-server-dev-9.5=9.5.2-3cdb2
  - sudo apt-get -y install postgresql-plpython-9.5=9.5.2-3cdb2
  - sudo apt-get -y install postgresql-9.5-postgis-scripts=2.2.2.0-cdb2
  - sudo apt-get -y install postgresql-9.5-postgis-2.2=2.2.2.0-cdb2

  # configure it to accept local connections from postgres
  - echo -e "# TYPE  DATABASE        USER            ADDRESS                 METHOD \nlocal   all             postgres                                trust\nlocal   all             all                                     trust\nhost    all             all             127.0.0.1/32            trust" \
    | sudo tee /etc/postgresql/9.5/main/pg_hba.conf
  - sudo /etc/init.d/postgresql restart 9.5

install:
  - sudo make install

script:
  - make test || { cat src/pg/test/regression.diffs; false; }
  - ./check-compatibility.sh

after_success:
  - docker login -e $DOCKER_EMAIL -u $DOCKER_USER -p $DOCKER_PASS
  - export REPO=splashblot/docker-crankshaft
  - export TAG=`if [ "$TRAVIS_BRANCH" == "master" ]; then echo "latest"; else echo $TRAVIS_BRANCH ; fi`
  - docker build -f Dockerfile -t $REPO:$COMMIT .
  - docker tag $REPO:$COMMIT $REPO:$TAG
  - docker tag $REPO:$COMMIT $REPO:travis-$TRAVIS_BUILD_NUMBER
  - docker push $REPO
